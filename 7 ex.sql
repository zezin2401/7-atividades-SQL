--1
UPDATE PACIENTE P SET p.PESO = 8.5
WHERE p.ID_PACIENTE = 1

SELECT * FROM PACIENTE p 

--2
UPDATE MEDICAMENTOS M SET m.ESTOQUE = 50
WHERE m.ID_MEDICAMENTO = 3

SELECT * FROM MEDICAMENTOS m 

--3
UPDATE TUTOR t SET t.DATA_NASCIMENTO = '2001/05/15'
WHERE t.ID_TUTOR = 2

SELECT * FROM TUTOR t 

--4
UPDATE AGENDAMENTO a SET a.MOTIVO = 'Dor de barriga severa'
WHERE a.ID_AGENDAMENTO = 5

SELECT * FROM AGENDAMENTO a 

--5
UPDATE MEDICAMENTOS m SET m.DESCRICAO =  'Anti-inflamatório para articulações'
WHERE m.ID_MEDICAMENTO = 6

SELECT * FROM MEDICAMENTOS m 

--6
UPDATE TUTOR t SET t.NOME = 'Maria Oliveira'
WHERE t.ID_TUTOR = 3

SELECT * FROM TUTOR t 

--7
UPDATE MEDICAMENTOS m SET m.DESCRICAO =  'Aplicar no olho afetado a cada 4 horas'
WHERE m.ID_MEDICAMENTO = 2

SELECT * FROM MEDICAMENTOS m 

--8
UPDATE TUTOR t SET t.ENDERECO = 'Rua dos Girassóis, 123'
WHERE t.ID_TUTOR = 4

SELECT * FROM TUTOR t 

--9
DELETE FROM AGENDAMENTO a
WHERE a.id_agendamento = 7

SELECT * FROM AGENDAMENTO a 

--10
DELETE FROM MEDICAMENTOS m
WHERE m.id_medicamento = 8

SELECT * FROM MEDICAMENTOS m 

--11
DELETE FROM RECEITA r 
  WHERE r.ID_AGENDAMENTO in (SELECT a.ID_AGENDAMENTO 
                              FROM AGENDAMENTO a 
  							 WHERE a.ID_PACIENTE in (SELECT p.ID_PACIENTE 
  						   							 FROM PACIENTE p
 						                            WHERE p.ID_TUTOR = 5));
 
 DELETE FROM AGENDAMENTO a 
  WHERE a.ID_PACIENTE in (SELECT p.ID_PACIENTE 
  						   FROM PACIENTE p
 						  WHERE p.ID_TUTOR = 5);

DELETE FROM paciente p
 WHERE p.ID_TUTOR = 5;

SELECT * FROM RECEITA r 

--12
DELETE FROM RECEITA
WHERE ID_AGENDAMENTO IS NULL

SELECT * FROM RECEITA r 

--13
DELETE FROM TUTOR t
WHERE t.data_nascimento < '1987-01-01'

SELECT * FROM TUTOR t 

--14
DELETE FROM ITENSRECEITA
WHERE ID_RECEITA BETWEEN 7 AND 9

SELECT * FROM ITENSRECEITA i 



SELECT max(M.estoque) AS MAIOR_ESTOQUE
	 , min(M.PRECO)   AS MENOR_PRECO
	 , avg(M.PRECO)   AS MEDIA_PRECO
FROM medicamentos m 

CREATE TABLE produtos (
	id_produto INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	descricao VARCHAR(50),
	precovenda NUMERIC(3,2),
	precocusto NUMERIC(3,2),
	categoria integer NOT NULL
)

INSERT INTO produtos 
	(descricao, precovenda, precocusto, categoria)
VALUES 
    ('caderno', 1.55, 1.55, 1);
    
INSERT INTO produtos 
	(descricao, precovenda, precocusto, categoria)
VALUES 
    ('caneta', 1.34, 2.58, 2);
  
INSERT INTO produtos 
	(descricao, precovenda, precocusto, categoria)
VALUES 
    ('disquete', 2.56, 4.67, 2);
    
INSERT INTO produtos 
	(descricao, precovenda, precocusto, categoria)
VALUES 
    ('mouse', 19.99, 38.54, 1);
   
SELECT max(P.precovenda)
  FROM produtos p
	
SELECT MIN(P.precovenda) 
  FROM produtos p
  
SELECT sum(P.PRECOVENDA)
  FROM PRODUTOS p 
  WHERE P.CATEGORIA = 2
  
SELECT AVG(P.PRECOVENDA)
  FROM PRODUTOS p 
  
SELECT COUNT(PRECOVENDA)
  FROM PRODUTOS p 
WHERE P.CATEGORIA = 2

SELECT P.CATEGORIA 
	, MAX(p.precovenda)
  FROM PRODUTOS p

SELECT P.CATEGORIA 
	, MAX(p.precovenda)
  FROM PRODUTOS p
 GROUP BY P.CATEGORIA

SELECT P.CATEGORIA 
	, MAX(p.precovenda)
  FROM PRODUTOS p
 GROUP BY P.CATEGORIA
 HAVING max(P.PRECOVENDA) > 10 
 

SELECT P.CATEGORIA 
	, AVG(p.precovenda)
  FROM PRODUTOS p
 GROUP BY P.CATEGORIA
 HAVING AVG(P.PRECOVENDA) > 10
 
ALTER TABLE ITENSRECEITA ADD total_item NUMERIC(10, 2);
	
UPDATE ITENSRECEITA i SET TOTAL_ITEM = 
(SELECT m.preco * i.QUANTIDADE 
				  FROM MEDICAMENTOS m 
                  WHERE m.id_medicamento = i.ID_MEDICAMENTO);

SELECT * FROM ITENSRECEITA i 

SELECT I.id_receita
	 , I.total_item
  FROM ITENSRECEITA i 

  
/* ATIV 1 */
SELECT SUM(ESTOQUE) AS total_estoque FROM MEDICAMENTOS;

SELECT * FROM MEDICAMENTOS m 

/* ATIV 2*/


/* ATIV 3*/
SELECT MIN(ESTOQUE) AS total_estoque FROM MEDICAMENTOS;

SELECT * FROM MEDICAMENTOS m 

/* ATIV 4*/
SELECT MAX(PESO) AS maior_peso FROM PACIENTE;

SELECT * FROM PACIENTE p 

/* ATIV 5*/
SELECT COUNT(*) AS total_tutores FROM TUTOR;

SELECT * FROM TUTOR t 

/* ATIV 6*/


/* ATIV 7*/
SELECT r.ID_RECEITA, SUM(i.TOTAL_ITEM) AS total_valor
	FROM RECEITA r
	JOIN ITENSRECEITA i ON r.ID_RECEITA = i.ID_RECEITA
	GROUP BY r.ID_RECEITA
	HAVING total_valor > 100;


 